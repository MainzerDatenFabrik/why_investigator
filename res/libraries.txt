########################################################################################################################
#                                                                                                                      #
#               The file has to end with an empty line followed by a "#". There must be an empty                       #
#               line between queries.                                                                                  #
#                                                                                                                      #
#               1. Name                                                                                                #
#               2. Minimal Compatible Version                                                                          #
#               3. Convert (maybe what method to use to convert, atm only true or false)                               #
#               4. Group (either instance, database, user)                                                             #
#               5. Query                                                                                               #
#               6. Empty line                                                                                          #
#                                                                                                                      #
#               SQL Server 2008: 10.50.2500.0                                                                          #
#               SQL Server 2012: 11.0.2100.60                                                                          #
#               SQL Server 2014: 12.0.5000.0                                                                           #
#               SQL Server 2016:                                                                                       #
#               SQL Server 2017:                                                                                       #
#                                                                                                                      #
########################################################################################################################
#                                                                                                                      #
#                                             DATABASE Check Queries                                                   #
#                                                                                                                      #
########################################################################################################################
DATABASE Logical IO
10.50.2500.0
false
database
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
DECLARE @Domain NVARCHAR(100);
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT;
WITH DB_CPU_Stats
AS
(
    SELECT DatabaseID, isnull(DB_Name(DatabaseID),case DatabaseID when 32767 then 'Internal ResourceDB' else CONVERT(varchar(255),DatabaseID)end) AS [DatabaseName],
      SUM(total_worker_time) AS [CPU_Time_Ms],
      SUM(total_logical_reads)  AS [Logical_Reads],
      SUM(total_logical_writes)  AS [Logical_Writes],
      SUM(total_logical_reads+total_logical_writes)  AS [Logical_IO],
      SUM(total_physical_reads)  AS [Physical_Reads],
      SUM(total_elapsed_time)  AS [Duration_MicroSec],
      SUM(total_clr_time)  AS [CLR_Time_MicroSec],
      SUM(total_rows)  AS [Rows_Returned],
      SUM(execution_count)  AS [Execution_Count],
      count(*) 'Plan_Count'
    FROM sys.dm_exec_query_stats AS qs
    CROSS APPLY (
                    SELECT CONVERT(int, value) AS [DatabaseID]
                  FROM sys.dm_exec_plan_attributes(qs.plan_handle)
                  WHERE attribute = N'dbid') AS F_DB
    GROUP BY DatabaseID
)
SELECT Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName, ROW_NUMBER() OVER(ORDER BY [CPU_Time_Ms] DESC) AS [Rank_CPU],
       DatabaseName,
       [CPU_Time_Hr] = convert(decimal(15,2),([CPU_Time_Ms]/1000.0)/3600) ,
        CAST([CPU_Time_Ms] * 1.0 / SUM(case [CPU_Time_Ms] when 0 then 1 else [CPU_Time_Ms] end) OVER() * 100.0 AS DECIMAL(5, 2)) AS [CPU_Percent],
       [Duration_Hr] = convert(decimal(15,2),([Duration_MicroSec]/1000000.0)/3600) ,
       CAST([Duration_MicroSec] * 1.0 / SUM(case [Duration_MicroSec] when 0 then 1 else [Duration_MicroSec] end) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Duration_Percent],
       [Logical_Reads],
        CAST([Logical_Reads] * 1.0 / SUM(case [Logical_Reads] when 0 then 1 else [Logical_Reads] end) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Logical_Reads_Percent],
       [Rows_Returned],
        CAST([Rows_Returned] * 1.0 / SUM(case [Rows_Returned] when 0 then 1 else [Rows_Returned] end) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Rows_Returned_Percent],
       [Reads_Per_Row_Returned] = [Logical_Reads]/(case [Rows_Returned] when 0 then 1 else [Rows_Returned] end),
       [Execution_Count],
        CAST([Execution_Count] * 1.0 / SUM(case [Execution_Count]  when 0 then 1 else [Execution_Count] end) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Execution_Count_Percent],
       [Physical_Reads],
       CAST([Physical_Reads] * 1.0 / SUM(case [Physical_Reads] when 0 then 1 else [Physical_Reads] end ) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Physcal_Reads_Percent],
       [Logical_Writes],
        CAST([Logical_Writes] * 1.0 / SUM(case [Logical_Writes] when 0 then 1 else [Logical_Writes] end) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Logical_Writes_Percent],
       [Logical_IO],
        CAST([Logical_IO] * 1.0 / SUM(case [Logical_IO] when 0 then 1 else [Logical_IO] end) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Logical_IO_Percent],
       [CLR_Time_MicroSec],
       CAST([CLR_Time_MicroSec] * 1.0 / SUM(case [CLR_Time_MicroSec] when 0 then 1 else [CLR_Time_MicroSec] end ) OVER() * 100.0 AS DECIMAL(5, 2)) AS [CLR_Time_Percent],
       [CPU_Time_Ms],[CPU_Time_Ms]/1000 [CPU_Time_Sec],
       [Duration_MicroSec],[Duration_MicroSec]/1000000 [Duration_Sec]
FROM DB_CPU_Stats
WHERE DatabaseID > 4 -- system databases
AND DatabaseID <> 32767 -- ResourceDB
ORDER BY [Rank_CPU] OPTION (RECOMPILE);

DATABASE File And Drive Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DB_Name ,
	        File_id ,
	        Type_desc ,
	        Name ,
	        LEFT(Physical_Name, 1) AS Drive ,
	        Physical_Name ,
	        RIGHT(physical_name, 3) AS Ext ,
	        Size ,
	        Growth
	FROM    sys.database_files
	ORDER BY File_id;

DATABASE Tables Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        t.Name AS TableName,
	        t.[Type],
	        t.create_date
	FROM    sys.tables t
	ORDER BY t.Name;

DATABASE Schema And Index Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        OBJECT_SCHEMA_NAME(ddps.object_id) AS SchemaName ,
	        OBJECT_NAME(ddps.object_id) AS TableName ,
	        i.Type_Desc ,
	        i.Name AS IndexUsedForCounts ,
	        SUM(ddps.row_count) AS Rows
	FROM    sys.dm_db_partition_stats ddps
	        JOIN sys.indexes i ON i.object_id = ddps.object_id
	                              AND i.index_id = ddps.index_id
	WHERE   i.type_desc IN ( 'CLUSTERED', 'HEAP' )
                              -- This is key (1 index per table)
	        AND OBJECT_SCHEMA_NAME(ddps.object_id) <> 'sys'
	GROUP BY ddps.object_id ,
	        i.type_desc ,
	        i.Name
	ORDER BY SchemaName ,
	        TableName;

DATABASE Reads And Writes Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        OBJECT_NAME(ddius.object_id) AS TableName ,
	        SUM(ddius.user_seeks + ddius.user_scans + ddius.user_lookups)
                                                               AS Reads ,
	        SUM(ddius.user_updates) AS Writes ,
	        SUM(ddius.user_seeks + ddius.user_scans + ddius.user_lookups
	            + ddius.user_updates) AS [Reads&Writes] ,
	        ( SELECT    DATEDIFF(s, create_date, GETDATE()) / 86400.0
	          FROM      master.sys.databases
	          WHERE     name = 'tempdb'
	        ) AS SampleDays ,
	        ( SELECT    DATEDIFF(s, create_date, GETDATE()) AS SecoundsRunnig
	          FROM      master.sys.databases
	          WHERE     name = 'tempdb'
	        ) AS SampleSeconds
	FROM    sys.dm_db_index_usage_stats ddius
	        INNER JOIN sys.indexes i ON ddius.object_id = i.object_id
	                                     AND i.index_id = ddius.index_id
	WHERE   OBJECTPROPERTY(ddius.object_id, 'IsUserTable') = 1
	        AND ddius.database_id = DB_ID()
	GROUP BY OBJECT_NAME(ddius.object_id)
	ORDER BY [Reads&Writes] DESC;

DATABASE Objects Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , @@SERVERNAME AS ServerName,
	    DB_NAME() AS DB_Name ,
	    o.name AS 'ObjectName' ,
	    o.[type] ,
	    o.create_date ,
		o.modify_date,
	    sm.[DEFINITION] AS 'script'
FROM    sys.objects o
	    INNER JOIN sys.sql_modules sm ON o.object_id = sm.OBJECT_ID
--WHERE   o.[Type] = 'FN' -- Function
ORDER BY o.NAME;

DATABASE Trigger Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , @@SERVERNAME AS ServerName,
	        DB_NAME() AS DB_Name ,
	        OBJECT_NAME(Parent_object_id) AS TableName ,
	        o.name AS 'TriggerName' ,
	        o.Type ,
	        o.create_date ,
			o.modify_date,
	        sm.[DEFINITION] AS 'Trigger script'
	FROM    sys.objects o
	        INNER JOIN sys.sql_modules sm ON o.object_id = sm.OBJECT_ID
	WHERE   o.Type = 'TR' -- Triggers
	ORDER BY o.NAME;

DATABASE Table Columns Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        isc.Table_Name AS TableName ,
	        isc.Table_Schema AS SchemaName ,
	        Ordinal_Position AS Ord ,
	        Column_Name ,
	        Data_Type ,
	        Numeric_Precision AS Prec ,
	        Numeric_Scale AS Scale ,
	        Character_Maximum_Length AS LEN , -- -1 means MAX like Varchar(MAX)
	        Is_Nullable ,
	        Column_Default ,
	        Table_Type
	FROM    INFORMATION_SCHEMA.COLUMNS isc
	        INNER JOIN information_schema.tables ist
	              ON isc.table_name = ist.table_name
	--      WHERE Table_Type = 'BASE TABLE' -- 'Base Table' or 'View'
	ORDER BY DBName ,
	        TableName ,
	        SchemaName ,
	        Ordinal_position;

DATABASE Column Usage Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        Column_Name ,
	        Data_Type ,
	        Numeric_Precision AS Prec ,
	        Numeric_Scale AS Scale ,
	        Character_Maximum_Length ,
	        COUNT(*) AS Count
	FROM    information_schema.columns isc
	        INNER JOIN information_schema.tables ist
	               ON isc.table_name = ist.table_name
	WHERE   Table_type = 'BASE TABLE'
	GROUP BY Column_Name ,
	        Data_Type ,
	        Numeric_Precision ,
	        Numeric_Scale ,
	        Character_Maximum_Length;

DATABASE Data Types Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        Data_Type ,
	        Numeric_Precision AS Prec ,
	        Numeric_Scale AS Scale ,
	        Character_Maximum_Length AS [Length] ,
	        COUNT(*) AS COUNT
	FROM    information_schema.columns isc
	        INNER JOIN information_schema.tables ist
	               ON isc.table_name = ist.table_name
	WHERE   Table_type = 'BASE TABLE'
	GROUP BY Data_Type ,
	        Numeric_Precision ,
	        Numeric_Scale ,
	        Character_Maximum_Length
	ORDER BY Data_Type ,
	        Numeric_Precision ,
	        Numeric_Scale ,
	        Character_Maximum_Length

DATABASE BLOB Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        isc.Table_Name ,
	        Ordinal_Position AS Ord ,
	        Column_Name ,
	        Data_Type AS BLOB_Data_Type ,
	        Numeric_Precision AS Prec ,
	        Numeric_Scale AS Scale ,
	        Character_Maximum_Length AS [Length]
	FROM    information_schema.columns isc
	        INNER JOIN information_schema.tables ist
	               ON isc.table_name = ist.table_name
	WHERE   Table_type = 'BASE TABLE'
	        AND ( Data_Type IN ( 'text', 'ntext', 'image', 'XML' )
	              OR ( Data_Type IN ( 'varchar', 'nvarchar', 'varbinary' )
	                   AND Character_Maximum_Length = -1
	                 )
	            ) -- varchar(max), nvarchar(max), varbinary(max)
	ORDER BY isc.Table_Name ,
	        Ordinal_position;

DATABASE Table Parent Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        parent.name AS TableName ,
	        o.name AS Defaults ,
	        o.[Type] ,
	        o.Create_date
	FROM    sys.objects o
	        INNER JOIN sys.objects parent
	               ON o.parent_object_id = parent.object_id
	WHERE   o.[Type] = 'D' -- Defaults
	ORDER BY parent.name ,
	        o.NAME

DATABASE Default Constraints Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DB_Name ,
	        OBJECT_SCHEMA_NAME(parent_object_id) AS SchemaName ,
	        OBJECT_NAME(parent_object_id) AS TableName ,
	        parent_column_id AS Column_NBR ,
	        Name AS DefaultName ,
	        [type] ,
	        type_desc ,
	        create_date ,
	        OBJECT_DEFINITION(object_id) AS Defaults
	FROM    sys.default_constraints
	ORDER BY TableName ,
	        Column_NBR

DATABASE System Tables Column Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DB_Name ,
	        OBJECT_SCHEMA_NAME(t.object_id) AS SchemaName ,
	        t.Name AS TableName ,
	        c.Column_ID AS Ord ,
	        c.Name AS Column_Name ,
	        OBJECT_NAME(default_object_id) AS DefaultName ,
	        OBJECT_DEFINITION(default_object_id) AS Defaults
	FROM    sys.Tables t
	        INNER JOIN sys.columns c ON t.object_id = c.object_id
	WHERE   default_object_id <> 0
	ORDER BY TableName ,
	        SchemaName ,
	        c.Column_ID

DATABASE Computed Columns Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
	        DB_NAME() AS DBName ,
	        OBJECT_SCHEMA_NAME(t.object_id) AS SchemaName,
	        t.Name AS TableName ,
	        c.Column_ID AS Ord ,
	        c.Name AS Computed_Column
	FROM    sys.Tables t
	        INNER JOIN sys.Columns c ON t.object_id = c.object_id
	WHERE   is_computed = 1
	ORDER BY t.Name ,
	        SchemaName ,
	        c.Column_ID

DATABASE System Files Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
		DB_NAME() AS DBName,
		file_id, file_guid,	type, type_desc, data_space_id, name, physical_name, state, state_desc, size, max_size, growth, is_media_read_only,	is_read_only, is_sparse, is_percent_growth, is_name_reserved, create_lsn, drop_lsn, read_only_lsn, read_write_lsn, differential_base_lsn, differential_base_guid, differential_base_time, redo_start_lsn, redo_start_fork_guid, redo_target_lsn, redo_target_fork_guid,	backup_lsn
FROM sys.database_files;

DATABASE Object Modification Info
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , DB_NAME() AS DBName, *,name, create_date, modify_date, @@SERVERNAME AS ServerName
FROM sys.objects
WHERE type_desc <> 'SYSTEM_TABLE' AND type_desc <>  'INTERNAL_TABLE'
AND type_desc <> 'SERVICE_QUEUE';

#DATABASE Rows Modification Info
#10.50.2500.0
#false
#database
#DECLARE @Domain NVARCHAR(100)
#EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
#SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
#DB_NAME() AS DBName,
#objectName,
#begintime,
#endtime,
#account,
#SUM(LOP_INSERT_ROWS) [Inserted],
#SUM(LOP_MODIFY_ROW) [Updated],
#SUM(LOP_DELETE_ROWS) [Deleted]
#FROM
#(
#SELECT
#object_name(p.object_id) objectName,
#tlog.[Current LSN],
#T.begintime begintime,
#c.endTime endtime,
#tlog.Operation operation,
#T.account account
#FROM
#sys.objects so
#inner join sys.partitions p on p.object_id=so.object_id
#inner join sys.system_internals_allocation_units AU on p.partition_id=AU.container_id
#inner join(
#select [Current LSN], [transaction ID] tranID,[end time] endTime, AllocUnitId, operation, Context
#from ::fn_dbLog(null, null)
#where (operation in ('LOP_INSERT_ROWS', 'LOP_MODIFY_ROW', 'LOP_DELETE_ROWS'))
#   --and context not in ('LCX_PFS', 'LCX_IAM'))
#--or operation in('LOP_COMMIT_XACT','LOP_BEGIN_XACT')
#)tlog on tlog.AllocUnitId=AU.allocation_unit_id
#inner join
#(
#   select [Transaction ID] tranID, [End Time] endTime
#   from ::fn_dbLog(null, null)
#  -- where Operation = 'LOP_COMMIT_XACT' and [End Time]>=DateADD(mi, -1500, Current_TimeStamp)
#   ) c on tlog.tranID = c.tranID
#   inner join
#   (
#   SELECT
#[Transaction ID] tranID,
#SUSER_SNAME ([Transaction SID]) AS account, [Begin Time] as begintime
#FROM fn_dblog (NULL, NULL)
#WHERE [Operation] = N'LOP_BEGIN_XACT') T
#on tlog.tranID = T.tranID
#WHERE
#so.type='U'
#)
#X
#pivot
#(
#  COUNT(operation)
#  FOR operation in (LOP_INSERT_ROWS, LOP_MODIFY_ROW,LOP_DELETE_ROWS,LOP_ABORT_XACT,LOP_COMMIT_XACT)
#)p
#GROUP BY objectName,begintime,endtime,account
#
DATABASE Schema Names
10.50.2500.0
false
database
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName, DB_NAME() AS DBName, * FROM sys.schemas;

########################################################################################################################
#                                                                                                                      #
#                                              USER Check Queries                                                      #
#                                                                                                                      #
########################################################################################################################
USER System Administrator Info
10.50.2500.0
false
user
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName,  Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN,
p.name AS [Name] ,r.type_desc,r.is_disabled,p.create_date , p.modify_date,r.default_database_name
FROM sys.dm_exec_connections,
sys.server_principals r
INNER JOIN sys.server_role_members m ON r.principal_id = m.role_principal_id
INNER JOIN sys.server_principals p ON
p.principal_id = m.member_principal_id
WHERE r.type = 'R' and r.name = N'sysadmin'

USER Role Info
10.50.2500.0
false
user
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
   spU.name
   ,MAX(CASE WHEN srm.role_principal_id = 3 THEN 1 END) AS sysadmin
   ,MAX(CASE WHEN srm.role_principal_id = 4 THEN 1 END) AS securityadmin
   ,MAX(CASE WHEN srm.role_principal_id = 5 THEN 1 END) AS serveradmin
   ,MAX(CASE WHEN srm.role_principal_id = 6 THEN 1 END) AS setupadmin
   ,MAX(CASE WHEN srm.role_principal_id = 7 THEN 1 END) AS processadmin
   ,MAX(CASE WHEN srm.role_principal_id = 8 THEN 1 END) AS diskadmin
   ,MAX(CASE WHEN srm.role_principal_id = 9 THEN 1 END) AS dbcreator
   ,MAX(CASE WHEN srm.role_principal_id = 10 THEN 1 END) AS bulkadmin
    ,spu.modify_date,spu.create_date
FROM
   sys.server_principals AS spR
JOIN
   sys.server_role_members AS srm
ON
   spR.principal_id = srm.role_principal_id
JOIN
   sys.server_principals AS spU
ON
   srm.member_principal_id = spU.principal_id
WHERE
   spR.[type] = 'R'
GROUP BY
   spU.name  ,spu.modify_date,spu.create_date

USER Users Info
10.50.2500.0
false
user
USE tempdb;
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[userpermission]') AND type IN (N'U'))
	DROP TABLE [dbo].[userpermission]
CREATE TABLE [dbo].[userpermission]
(
    [username] [VARCHAR](200) NULL,
    [usertype] [VARCHAR](200) NULL,
    [databaseusername] [VARCHAR](200) NULL,
    [role] [VARCHAR](200) NULL,
    [permissiontype] [VARCHAR](200) NULL,
    [permissionstate] [VARCHAR](200) NULL,
    [objecttype] [VARCHAR](200) NULL,
    [objectname] [VARCHAR](200) NULL,
    [columname] [VARCHAR](200) NULL,
    [databaseName] [VARCHAR](2000) NULL,
    [FQDN] [VARCHAR](2000) NULL,
    [create_date] DATETIME,
    [modify_date] DATETIME,
    [portListen] VARCHAR(2000),
    [servername] VARCHAR(2000),
) ON [PRIMARY];
SELECT name
INTO #dbnames
FROM sys.databases
WHERE database_id <> 2;
DECLARE @countdb INT;
DECLARE @dbname VARCHAR(3500);
SET @countdb =
(
    SELECT COUNT(*) FROM #dbnames
);
WHILE @countdb <> 0
BEGIN
    SET @dbname =
    (
        SELECT TOP 1 [name] FROM #dbnames
    );
    DECLARE @exec NVARCHAR(MAX)
        = QUOTENAME(@dbname) + N'.sys.sp_executesql',
            @sql NVARCHAR(MAX) = N'DECLARE @Domain NVARCHAR(100)
								EXEC master.dbo.xp_regread ''HKEY_LOCAL_MACHINE'', ''SYSTEM\CurrentControlSet\services\Tcpip\Parameters'', N''Domain'',@Domain OUTPUT
								INSERT INTO tempdb.[dbo].[userpermission]
           ([username]
           ,[usertype]
           ,[databaseusername]
           ,[role]
           ,[permissiontype]
           ,[permissionstate]
           ,[objecttype]
           ,[objectname]
           ,[columname]
		   ,[databaseName]
		   ,[FQDN]
		   ,[create_date]
		   ,[modify_date])
SELECT
    [UserName] = CASE princ.[type]
                    WHEN ''S'' THEN princ.[name]
                    WHEN ''U'' THEN ulogin.[name] COLLATE Latin1_General_CI_AI
                 END,
    [UserType] = CASE princ.[type]
                    WHEN ''S'' THEN ''SQL User''
                    WHEN ''U'' THEN ''Windows USER''
                 END,
    [DatabaseUserName] = princ.[name],
    [Role] = null,
    [PermissionType] = perm.[permission_name],
    [PermissionState] = perm.[state_desc],
    [ObjectType] = obj.type_desc,--perm.[class_desc],
    [ObjectName] = OBJECT_NAME(perm.major_id),
    [ColumnName] = col.[name]
	,DB_NAME()
	,Cast(SERVERPROPERTY(''MachineName'') as nvarchar) + ''.'' + @Domain AS FQDN
	,princ.[create_date]
	,princ.[modify_date]
FROM
    --database user
    sys.database_principals princ
LEFT JOIN
    --Login accounts
    sys.login_token ulogin on princ.[sid] = ulogin.[sid]
LEFT JOIN
    --Permissions
    sys.database_permissions perm ON perm.[grantee_principal_id] = princ.[principal_id]
LEFT JOIN
    --Table columns
    sys.columns col ON col.[object_id] = perm.major_id
                    AND col.[column_id] = perm.[minor_id]
LEFT JOIN
    sys.objects obj ON perm.[major_id] = obj.[object_id]
WHERE
    princ.[type] in (''S'',''U'')
UNION
--List all access provisioned to a sql user or windows user/group through a database or application role
SELECT
    [UserName] = CASE memberprinc.[type]
                    WHEN ''S'' THEN memberprinc.[name]
                    WHEN ''U'' THEN ulogin.[name] COLLATE Latin1_General_CI_AI
                 END,
    [UserType] = CASE memberprinc.[type]
                    WHEN ''S'' THEN ''SQL User''
                    WHEN ''U'' THEN ''Windows User''
                 END,
    [DatabaseUserName] = memberprinc.[name],
    [Role] = roleprinc.[name],
    [PermissionType] = perm.[permission_name],
    [PermissionState] = perm.[state_desc],
    [ObjectType] = obj.type_desc,--perm.[class_desc],
    [ObjectName] = OBJECT_NAME(perm.major_id),
    [ColumnName] = col.[name]
	,DB_NAME()
	,Cast(SERVERPROPERTY(''MachineName'') as nvarchar) + ''.'' + @Domain AS FQDN
	,[create_date]  = [memberprinc].[create_date]
	,[modify_date] = [memberprinc].[modify_date]
FROM
    --Role/member associations
    sys.database_role_members members
JOIN
    --Roles
    sys.database_principals roleprinc ON roleprinc.[principal_id] = members.[role_principal_id]
JOIN
    --Role members (database users)
    sys.database_principals memberprinc ON memberprinc.[principal_id] = members.[member_principal_id]
LEFT JOIN
    --Login accounts
    sys.login_token ulogin on memberprinc.[sid] = ulogin.[sid]
LEFT JOIN
    --Permissions
    sys.database_permissions perm ON perm.[grantee_principal_id] = roleprinc.[principal_id]
LEFT JOIN
    --Table columns
    sys.columns col on col.[object_id] = perm.major_id
                    AND col.[column_id] = perm.[minor_id]
LEFT JOIN
    sys.objects obj ON perm.[major_id] = obj.[object_id]
UNION
--List all access provisioned to the public role, which everyone gets by default
SELECT
     [UserName] = ''{All Users}'',
    [UserType] = ''{All Users}'',
    [DatabaseUserName] = ''{All Users}'',
    [Role] = roleprinc.[name],
    [PermissionType] = perm.[permission_name],
    [PermissionState] = perm.[state_desc],
    [ObjectType] = obj.type_desc,--perm.[class_desc],
    [ObjectName] = OBJECT_NAME(perm.major_id),
    [ColumnName] = col.[name]
	,DB_NAME()
	,Cast(SERVERPROPERTY(''MachineName'') as nvarchar) + ''.'' + @Domain AS FQDN
	,[create_date] =[obj].[create_date]
	,[modify_date] = [obj].[modify_date]
FROM
    --Roles
    sys.database_principals roleprinc
LEFT JOIN
    --Role permissions
    sys.database_permissions perm ON perm.[grantee_principal_id] = roleprinc.[principal_id]
LEFT JOIN
    --Table columns
    sys.columns col on col.[object_id] = perm.major_id
                    AND col.[column_id] = perm.[minor_id]
JOIN
    --All objects
    sys.objects obj ON obj.[object_id] = perm.[major_id]
WHERE
    --Only roles
  roleprinc.[type] = ''R'' AND
    --Only public role
      roleprinc.[name] = ''public'' AND
 --   --Only objects of ours, not the MS objects
    obj.is_ms_shipped = 0
ORDER BY
    princ.[Name],
    OBJECT_NAME(perm.major_id),
    col.[name],
    perm.[permission_name],
    perm.[state_desc],
    obj.type_desc--perm.[class_desc]
								';
    EXEC @exec @sql;
    DELETE FROM #dbnames
    WHERE [name] = @dbname;
    SET @countdb = @countdb - 1;
END;
DROP TABLE #dbnames;
USE [tempdb];
USE [tempdb];
UPDATE [dbo].[userpermission]
SET [portListen] =
    (
        SELECT DISTINCT TOP(1)
               local_tcp_port
        FROM sys.dm_exec_connections
        WHERE local_tcp_port IS NOT NULL
    ),
    [servername] = @@SERVERNAME;
SELECT *
FROM [dbo].[userpermission];
DROP TABLE [dbo].[userpermission];

USER Server Principals
11.0.2100.60
false
user
DECLARE @port NVARCHAR(100)
SET @port = (SELECT DISTINCT TOP(1) local_tcp_port FROM sys.dm_exec_connections WHERE local_tcp_port IS NOT NULL)
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT @@SERVERNAME AS ServerName, CAST(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @port AS Local_tcp_port,
   name AS 'UserName'
 , type AS 'User Type'
 , type_desc AS 'Login Type'
 , CAST(create_date AS DATE) AS 'Date Created'
 , default_database_name AS 'Database Name'
 , IIF(is_fixed_role LIKE 0, 'No', 'Yes') AS 'Is Active'
 ,*
FROM master.sys.server_principals
WHERE type LIKE 's' OR type LIKE 'u'
ORDER BY [UserName], [Database Name];

########################################################################################################################
#                                                                                                                      #
#                                             INSTANCE Check Queries                                                   #
#                                                                                                                      #
########################################################################################################################
INSTANCE CPU Utilization
10.50.2500.0
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT;
WITH SQLProcessCPU
AS(
   SELECT TOP(30) SQLProcessUtilization AS 'CPU_Usage', ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS 'row_number'
   FROM (
         SELECT
           record.value('(./Record/@id)[1]', 'int') AS record_id,
           record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int') AS [SystemIdle],
           record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', 'int') AS [SQLProcessUtilization],
           [timestamp]
         FROM (
              SELECT [timestamp], CONVERT(xml, record) AS [record]
              FROM sys.dm_os_ring_buffers
              WHERE ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR'
              AND record LIKE '%<SystemHealth>%'
              ) AS x
        ) AS y
)
SELECT
   Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName,
   (SELECT value_in_use FROM sys.configurations WHERE name like '%max server memory%') AS 'Max Server Memory',
   (SELECT physical_memory_in_use_kb/1024 FROM sys.dm_os_process_memory) AS 'SQL Server Memory Usage (MB)',
   (SELECT total_physical_memory_kb/1024 FROM sys.dm_os_sys_memory) AS 'Physical Memory (MB)',
   (SELECT available_physical_memory_kb/1024 FROM sys.dm_os_sys_memory) AS 'Available Memory (MB)',
   (SELECT system_memory_state_desc FROM sys.dm_os_sys_memory) AS 'System Memory State',
   (SELECT [cntr_value] FROM sys.dm_os_performance_counters WHERE [object_name] LIKE '%Manager%' AND [counter_name] = 'Page life expectancy') AS 'Page Life Expectancy',
   (SELECT AVG(CPU_Usage) FROM SQLProcessCPU WHERE row_number BETWEEN 1 AND 30) AS 'SQLProcessUtilization30',
   (SELECT AVG(CPU_Usage) FROM SQLProcessCPU WHERE row_number BETWEEN 1 AND 15) AS 'SQLProcessUtilization15',
   (SELECT AVG(CPU_Usage) FROM SQLProcessCPU WHERE row_number BETWEEN 1 AND 10) AS 'SQLProcessUtilization10',
   (SELECT AVG(CPU_Usage) FROM SQLProcessCPU WHERE row_number BETWEEN 1 AND 5)  AS 'SQLProcessUtilization5',
   GETDATE() AS 'Data Sample Timestamp'

########################################################################################################################
#                                                                                                                      #
#                                 SQL Server 2012 Diagnostic Information Queries                                       #
#                                                                                                                      #
########################################################################################################################
INSTANCE Version Info
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , @@VERSION AS [SQL Server and OS Version Info]
FROM sys.dm_exec_connections;

INSTANCE Core Counts
11.0.2100.60
false
instance
CREATE TABLE #errorLog
([LogDate] datetime,
 [ProcessInfo] nvarchar(20),
 [Text] nvarchar(max)
 )
INSERT #errorLog ([LogDate], [ProcessInfo], [Text]) EXEC sys.xp_readerrorlog 0, 1, N'detected', N'socket';
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
DECLARE @port NVARCHAR(100)
SET @port = (SELECT DISTINCT TOP(1) local_tcp_port FROM sys.dm_exec_connections WHERE local_tcp_port IS NOT NULL)
SELECT @port AS local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, * from #errorLog;
DROP TABLE #errorLog

INSTANCE Server Properties
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT  DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, CAST(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN,
SERVERPROPERTY('MachineName') AS [MachineName],
SERVERPROPERTY('InstanceName') AS [Instance],
SERVERPROPERTY('IsClustered') AS [IsClustered],
SERVERPROPERTY('ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
SERVERPROPERTY('Edition') AS [Edition],
SERVERPROPERTY('ProductLevel') AS [ProductLevel],                -- What servicing branch (RTM/SP/CU)
SERVERPROPERTY('ProductUpdateLevel') AS [ProductUpdateLevel],    -- Within a servicing branch, what CU# is applied
SERVERPROPERTY('ProductVersion') AS [ProductVersion],
SERVERPROPERTY('ProductMajorVersion') AS [ProductMajorVersion],
SERVERPROPERTY('ProductMinorVersion') AS [ProductMinorVersion],
SERVERPROPERTY('ProductBuild') AS [ProductBuild],
SERVERPROPERTY('ProductBuildType') AS [ProductBuildType],              -- Is this a GDR or OD hotfix (NULL if on a CU build)
SERVERPROPERTY('ProductUpdateReference') AS [ProductUpdateReference], -- KB article number that is applicable for this build
SERVERPROPERTY('ProcessID') AS [ProcessID],
SERVERPROPERTY('Collation') AS [Collation],
SERVERPROPERTY('IsFullTextInstalled') AS [IsFullTextInstalled],
SERVERPROPERTY('IsIntegratedSecurityOnly') AS [IsIntegratedSecurityOnly],
SERVERPROPERTY('FilestreamConfiguredLevel') AS [FilestreamConfiguredLevel],
SERVERPROPERTY('IsHadrEnabled') AS [IsHadrEnabled],
SERVERPROPERTY('HadrManagerStatus') AS [HadrManagerStatus],
SERVERPROPERTY('InstanceDefaultDataPath') AS [InstanceDefaultDataPath],
SERVERPROPERTY('InstanceDefaultLogPath') AS [InstanceDefaultLogPath],
SERVERPROPERTY('BuildClrVersion') AS [Build CLR Version],
SERVERPROPERTY('IsXTPSupported') AS [IsXTPSupported]
FROM sys.dm_exec_connections
WHERE local_tcp_port IS NOT NULL;

INSTANCE Configuration Values
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , name, value, value_in_use, minimum, maximum, [description], is_dynamic, is_advanced
FROM sys.dm_exec_connections, sys.configurations WITH (NOLOCK)
WHERE local_tcp_port IS NOT NULL
ORDER BY name OPTION (RECOMPILE);

INSTANCE IFI Status
11.0.2100.60
false
instance
CREATE TABLE #errorLog
([LogDate] datetime,
 [ProcessInfo] nvarchar(20),
 [Text] nvarchar(max)
 )
INSERT #errorLog ([LogDate], [ProcessInfo], [Text]) EXEC sys.xp_readerrorlog 0, 1, N'Database Instant File Initialization';
DECLARE @port NVARCHAR(100)
SET @port = (SELECT DISTINCT TOP(1) local_tcp_port FROM sys.dm_exec_connections WHERE local_tcp_port IS NOT NULL)
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT @port AS Local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, * from #errorLog;
DROP TABLE #errorLog

INSTANCE Process Memory
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , physical_memory_in_use_kb/1024 AS [SQL Server Memory Usage (MB)],
	   locked_page_allocations_kb/1024 AS [SQL Server Locked Pages Allocation (MB)],
       large_page_allocations_kb/1024 AS [SQL Server Large Pages Allocation (MB)],
	   page_fault_count, memory_utilization_percentage, available_commit_limit_kb,
	   process_physical_memory_low, process_virtual_memory_low
FROM sys.dm_exec_connections , sys.dm_os_process_memory WITH (NOLOCK) WHERE local_tcp_port IS NOT NULL OPTION (RECOMPILE);

INSTANCE SQL Server Services Info
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , servicename, process_id, startup_type_desc, status_desc,
last_startup_time, service_account, is_clustered, cluster_nodename, [filename]
FROM sys.dm_exec_connections, sys.dm_server_services WITH (NOLOCK) WHERE local_tcp_port IS NOT NULL OPTION (RECOMPILE);

INSTANCE Last Backup By Database
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , ISNULL(d.[name], bs.[database_name]) AS [Database], d.recovery_model_desc AS [Recovery Model],
     d.log_reuse_wait_desc AS [Log Reuse Wait Desc],
  MAX(CASE WHEN [type] = 'D' THEN bs.backup_finish_date ELSE NULL END) AS [Last Full Backup],
  MAX(CASE WHEN [type] = 'I' THEN bs.backup_finish_date ELSE NULL END) AS [Last Differential Backup],
  MAX(CASE WHEN [type] = 'L' THEN bs.backup_finish_date ELSE NULL END) AS [Last Log Backup]
FROM sys.dm_exec_connections, sys.databases AS d WITH (NOLOCK)
LEFT OUTER JOIN msdb.dbo.backupset AS bs WITH (NOLOCK)
ON bs.[database_name] = d.[name]
AND bs.backup_finish_date > GETDATE()- 30
WHERE d.name <> N'tempdb' AND local_tcp_port IS NOT null
GROUP BY ISNULL(d.[name], bs.[database_name]), d.recovery_model_desc, d.log_reuse_wait_desc, d.[name], local_tcp_port

INSTANCE SQL Server Agent Jobs
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , sj.name AS [Job Name], sj.[description] AS [Job Description], SUSER_SNAME(sj.owner_sid) AS [Job Owner],
sj.date_created AS [Date Created], sj.[enabled] AS [Job Enabled],
sj.notify_email_operator_id, sj.notify_level_email, sc.name AS [CategoryName],
s.[enabled] AS [Sched Enabled], js.next_run_date, js.next_run_time
FROM sys.dm_exec_connections, msdb.dbo.sysjobs AS sj WITH (NOLOCK)
INNER JOIN msdb.dbo.syscategories AS sc WITH (NOLOCK)
ON sj.category_id = sc.category_id
LEFT OUTER JOIN msdb.dbo.sysjobschedules AS js WITH (NOLOCK)
ON sj.job_id = js.job_id
LEFT OUTER JOIN msdb.dbo.sysschedules AS s WITH (NOLOCK)
ON js.schedule_id = s.schedule_id
WHERE local_tcp_port IS NOT NULL
ORDER BY sj.name OPTION (RECOMPILE);

#SQL Server Agent Alerts
#12.0.5000.0
#false
#instance
#SELECT name, event_source, message_id, severity, [enabled], has_notification,
#       delay_between_responses, occurrence_count, last_occurrence_date, last_occurrence_time
#FROM msdb.dbo.sysalerts WITH (NOLOCK)
#ORDER BY name OPTION (RECOMPILE);
#
INSTANCE Windows Info
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , windows_release, windows_service_pack_level,
       windows_sku, os_language_version
FROM sys.dm_exec_connections, sys.dm_os_windows_info WITH (NOLOCK) WHERE local_tcp_port IS NOT NULL OPTION (RECOMPILE);

INSTANCE SQL Server NUMA Info
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , node_id, node_state_desc, memory_node_id, processor_group, online_scheduler_count,
       idle_scheduler_count, active_worker_count, avg_load_balance, resource_monitor_state
FROM sys.dm_exec_connections, sys.dm_os_nodes WITH (NOLOCK)
WHERE node_state_desc <> N'ONLINE DAC' AND local_tcp_port IS NOT NULL OPTION (RECOMPILE);

INSTANCE System Memory
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , total_physical_memory_kb/1024 AS [Physical Memory (MB)],
       available_physical_memory_kb/1024 AS [Available Memory (MB)],
       total_page_file_kb/1024 AS [Total Page File (MB)],
	   available_page_file_kb/1024 AS [Available Page File (MB)],
	   system_cache_kb/1024 AS [System Cache (MB)],
       system_memory_state_desc AS [System Memory State]
FROM sys.dm_exec_connections, sys.dm_os_sys_memory WITH (NOLOCK) WHERE local_tcp_port IS NOT NULL OPTION (RECOMPILE);

INSTANCE Hardware Info
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
DECLARE @port NVARCHAR(100)
SET @port = (SELECT DISTINCT TOP(1) local_tcp_port FROM sys.dm_exec_connections WHERE local_tcp_port IS NOT NULL)
SELECT @port AS Local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , cpu_count AS [Logical CPU Count], scheduler_count,
       hyperthread_ratio AS [Hyperthread Ratio],
       cpu_count/hyperthread_ratio AS [Physical CPU Count], 
       physical_memory_kb/1024 AS [Physical Memory (MB)], 
	   committed_kb/1024 AS [Committed Memory (MB)],
       committed_target_kb/1024 AS [Committed Target Memory (MB)],
       max_workers_count AS [Max Workers Count], 
	   affinity_type_desc AS [Affinity Type], 
       sqlserver_start_time AS [SQL Server Start Time],
	   DATEDIFF(hour, sqlserver_start_time, GETDATE()) AS [SQL Server Up Time (hrs)],
	   virtual_machine_type_desc AS [Virtual Machine Type]
FROM sys.dm_os_sys_info WITH (NOLOCK) OPTION (RECOMPILE);

INSTANCE Tempdb Data Files
11.0.2100.60
false
instance
CREATE TABLE #errorLog
([LogDate] datetime,
 [ProcessInfo] nvarchar(20),
 [Text] nvarchar(max)
 )
INSERT #errorLog ([LogDate], [ProcessInfo], [Text]) EXEC sys.xp_readerrorlog 0, 1, N'The tempdb database has';
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
DECLARE @port NVARCHAR(100)
SET @port = (SELECT DISTINCT TOP(1) local_tcp_port FROM sys.dm_exec_connections WHERE local_tcp_port IS NOT NULL)
SELECT @port as Local_tcp_port, @@SERVERNAME AS ServerName, CAST(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , * from #errorLog;
DROP TABLE #errorLog

INSTANCE Database Filenames And Paths
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , DB_NAME([database_id]) AS [Database Name],
       [file_id], [name], physical_name, [type_desc], state_desc,
	   is_percent_growth, growth,
	   CONVERT(bigint, growth/128.0) AS [Growth in MB],
       CONVERT(bigint, size/128.0) AS [Total Size in MB]
FROM sys.dm_exec_connections, sys.master_files WITH (NOLOCK)
ORDER BY DB_NAME([database_id]), [file_id] OPTION (RECOMPILE);

INSTANCE Database Properties
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , db.[name] AS [Database Name], SUSER_SNAME(db.owner_sid) AS [Database Owner], db.recovery_model_desc AS [Recovery Model],
db.state_desc, db.containment_desc, db.log_reuse_wait_desc AS [Log Reuse Wait Description],
CONVERT(DECIMAL(18,2), ls.cntr_value/1024.0) AS [Log Size (MB)], CONVERT(DECIMAL(18,2), lu.cntr_value/1024.0) AS [Log Used (MB)],
CAST(CAST(lu.cntr_value AS FLOAT) / CAST(ls.cntr_value AS FLOAT)AS DECIMAL(18,2)) * 100 AS [Log Used %],
db.[compatibility_level] AS [DB Compatibility Level], db.page_verify_option_desc AS [Page Verify Option],
db.is_auto_create_stats_on, db.is_auto_update_stats_on, db.is_auto_update_stats_async_on, db.is_parameterization_forced,
db.snapshot_isolation_state_desc, db.is_read_committed_snapshot_on, db.is_auto_close_on, db.is_auto_shrink_on,
db.target_recovery_time_in_seconds, db.is_cdc_enabled, db.is_published, db.is_distributor, db.is_encrypted,
db.group_database_id, db.replica_id, 'n/a' AS is_memory_optimized_elevate_to_snapshot_on,
'n/a' AS delayed_durability_desc, 'n/a' AS is_auto_create_stats_incremental_on,
db.is_encrypted, de.encryption_state, de.percent_complete, de.key_algorithm, de.key_length
FROM sys.dm_exec_connections, sys.databases AS db WITH (NOLOCK)
INNER JOIN sys.dm_os_performance_counters AS lu WITH (NOLOCK)
ON db.name = lu.instance_name
INNER JOIN sys.dm_os_performance_counters AS ls WITH (NOLOCK)
ON db.name = ls.instance_name
LEFT OUTER JOIN sys.dm_database_encryption_keys AS de WITH (NOLOCK)
ON db.database_id = de.database_id
WHERE lu.counter_name LIKE N'Log File(s) Used Size (KB)%'
AND ls.counter_name LIKE N'Log File(s) Size (KB)%'
AND ls.cntr_value > 0
AND local_tcp_port IS NOT NULL
ORDER BY db.[name] OPTION (RECOMPILE);

INSTANCE Database Connection And Login Info
11.0.2100.60
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN,
DB_NAME(dbid) AS DBName,
COUNT(dbid) AS NumberOfConnections,
loginame
FROM sys.dm_exec_connections, sys.sysprocesses
GROUP BY dbid, loginame, local_tcp_port
ORDER BY DB_NAME(dbid)

INSTANCE Cpu
11.0.2100.60
false
instance
DECLARE @ts BIGINT;
DECLARE @lastNmin TINYINT;
DECLARE @Domain NVARCHAR(100);
SET @lastNmin = 10;
SELECT @ts =(SELECT cpu_ticks/(cpu_ticks/ms_ticks) FROM sys.dm_os_sys_info);
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain', @Domain OUTPUT
SELECT DISTINCT TOP(@lastNmin) local_tcp_port, @@SERVERNAME AS ServerName, CAST(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN,
        SQLProcessUtilization AS [SQLServer_CPU_Utilization],
        SystemIdle AS [System_Idle_Process],
        100 - SystemIdle - SQLProcessUtilization AS [Other_Process_CPU_Utilization],
        DATEADD(ms,-1 *(@ts - [timestamp]),GETDATE())AS [Event_Time], y.record_id
FROM sys.dm_exec_connections, (SELECT record.value('(./Record/@id)[1]','int')AS record_id,
record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]','int')AS [SystemIdle],
record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]','int')AS [SQLProcessUtilization],
[timestamp]
FROM (SELECT[timestamp], convert(xml, record) AS [record]
FROM sys.dm_os_ring_buffers
WHERE ring_buffer_type =N'RING_BUFFER_SCHEDULER_MONITOR'AND record LIKE'%%')AS x )AS y
ORDER BY local_tcp_port, record_id DESC;

########################################################################################################################
#                                                                                                                      #
#                                 SQL Server 2014 Diagnostic Information Queries                                       #
#                                                                                                                      #
########################################################################################################################
INSTANCE Database Properties
12.0.5000.0
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT local_tcp_port, @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN , db.[name] AS [Database Name], SUSER_SNAME(db.owner_sid) AS [Database Owner], db.recovery_model_desc AS [Recovery Model],
db.state_desc, db.containment_desc, db.log_reuse_wait_desc AS [Log Reuse Wait Description],
CONVERT(DECIMAL(18,2), ls.cntr_value/1024.0) AS [Log Size (MB)], CONVERT(DECIMAL(18,2), lu.cntr_value/1024.0) AS [Log Used (MB)],
CAST(CAST(lu.cntr_value AS FLOAT) / CAST(ls.cntr_value AS FLOAT)AS DECIMAL(18,2)) * 100 AS [Log Used %],
db.[compatibility_level] AS [DB Compatibility Level], db.page_verify_option_desc AS [Page Verify Option],
db.is_auto_create_stats_on, db.is_auto_update_stats_on, db.is_auto_update_stats_async_on, db.is_parameterization_forced,
db.snapshot_isolation_state_desc, db.is_read_committed_snapshot_on, db.is_auto_close_on, db.is_auto_shrink_on,
db.target_recovery_time_in_seconds, db.is_cdc_enabled, db.is_published, db.is_distributor, db.is_encrypted,
db.group_database_id, db.replica_id,db.is_memory_optimized_elevate_to_snapshot_on,
db.delayed_durability_desc, db.is_auto_create_stats_incremental_on,
db.is_encrypted, de.encryption_state, de.percent_complete, de.key_algorithm, de.key_length
FROM sys.dm_exec_connections, sys.databases AS db WITH (NOLOCK)
INNER JOIN sys.dm_os_performance_counters AS lu WITH (NOLOCK)
ON db.name = lu.instance_name
INNER JOIN sys.dm_os_performance_counters AS ls WITH (NOLOCK)
ON db.name = ls.instance_name
LEFT OUTER JOIN sys.dm_database_encryption_keys AS de WITH (NOLOCK)
ON db.database_id = de.database_id
WHERE lu.counter_name LIKE N'Log File(s) Used Size (KB)%'
AND ls.counter_name LIKE N'Log File(s) Size (KB)%'
AND ls.cntr_value > 0
AND local_tcp_port IS NOT NULL
ORDER BY db.[name] OPTION (RECOMPILE);

########################################################################################################################
#                                                                                                                      #
#                                 SQL Server 2014 Diagnostic Information Queries                                       #
#                                                                                                                      #
########################################################################################################################
INSTANCE Volume Info
13.00.1601.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT  @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, vs.volume_mount_point, vs.file_system_type, vs.logical_volume_name,
CONVERT(DECIMAL(18,2), vs.total_bytes/1073741824.0) AS [Total Size (GB)],
CONVERT(DECIMAL(18,2), vs.available_bytes/1073741824.0) AS [Available Size (GB)],
CONVERT(DECIMAL(18,2), vs.available_bytes * 1. / vs.total_bytes * 100.) AS [Space Free %],
vs.supports_compression, vs.is_compressed,
vs.supports_sparse_files, vs.supports_alternate_streams
FROM sys.master_files AS f WITH (NOLOCK)
CROSS APPLY sys.dm_os_volume_stats(f.database_id, f.[file_id]) AS vs
ORDER BY vs.volume_mount_point OPTION (RECOMPILE);

INSTANCE Drive Level Latency
13.00.1601.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT  @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, tab.[Drive], tab.volume_mount_point AS [Volume Mount Point],
	CASE
		WHEN num_of_reads = 0 THEN 0
		ELSE (io_stall_read_ms/num_of_reads)
	END AS [Read Latency],
	CASE
		WHEN num_of_writes = 0 THEN 0
		ELSE (io_stall_write_ms/num_of_writes)
	END AS [Write Latency],
	CASE
		WHEN (num_of_reads = 0 AND num_of_writes = 0) THEN 0
		ELSE (io_stall/(num_of_reads + num_of_writes))
	END AS [Overall Latency],
	CASE
		WHEN num_of_reads = 0 THEN 0
		ELSE (num_of_bytes_read/num_of_reads)
	END AS [Avg Bytes/Read],
	CASE
		WHEN num_of_writes = 0 THEN 0
		ELSE (num_of_bytes_written/num_of_writes)
	END AS [Avg Bytes/Write],
	CASE
		WHEN (num_of_reads = 0 AND num_of_writes = 0) THEN 0
		ELSE ((num_of_bytes_read + num_of_bytes_written)/(num_of_reads + num_of_writes))
	END AS [Avg Bytes/Transfer]
FROM (SELECT LEFT(UPPER(mf.physical_name), 2) AS Drive, SUM(num_of_reads) AS num_of_reads,
	         SUM(io_stall_read_ms) AS io_stall_read_ms, SUM(num_of_writes) AS num_of_writes,
	         SUM(io_stall_write_ms) AS io_stall_write_ms, SUM(num_of_bytes_read) AS num_of_bytes_read,
	         SUM(num_of_bytes_written) AS num_of_bytes_written, SUM(io_stall) AS io_stall, vs.volume_mount_point
      FROM sys.dm_io_virtual_file_stats(NULL, NULL) AS vfs
      INNER JOIN sys.master_files AS mf WITH (NOLOCK)
      ON vfs.database_id = mf.database_id AND vfs.file_id = mf.file_id
	  CROSS APPLY sys.dm_os_volume_stats(mf.database_id, mf.[file_id]) AS vs
      GROUP BY LEFT(UPPER(mf.physical_name), 2), vs.volume_mount_point) AS tab
ORDER BY [Overall Latency] OPTION (RECOMPILE);

INSTANCE IO Latency
13.00.1601.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT DISTINCT  @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, DB_NAME(fs.database_id) AS [Database Name], CAST(fs.io_stall_read_ms/(1.0 + fs.num_of_reads) AS NUMERIC(10,1)) AS [avg_read_latency_ms],
CAST(fs.io_stall_write_ms/(1.0 + fs.num_of_writes) AS NUMERIC(10,1)) AS [avg_write_latency_ms],
CAST((fs.io_stall_read_ms + fs.io_stall_write_ms)/(1.0 + fs.num_of_reads + fs.num_of_writes) AS NUMERIC(10,1)) AS [avg_io_latency_ms],
CONVERT(DECIMAL(18,2), mf.size/128.0) AS [File Size (MB)], mf.physical_name, mf.type_desc, fs.io_stall_read_ms, fs.num_of_reads,
fs.io_stall_write_ms, fs.num_of_writes, fs.io_stall_read_ms + fs.io_stall_write_ms AS [io_stalls], fs.num_of_reads + fs.num_of_writes AS [total_io],
io_stall_queued_read_ms AS [Resource Governor Total Read IO Latency (ms)], io_stall_queued_write_ms AS [Resource Governor Total Write IO Latency (ms)]
FROM sys.dm_io_virtual_file_stats(null,null) AS fs
INNER JOIN sys.master_files AS mf WITH (NOLOCK)
ON fs.database_id = mf.database_id
AND fs.[file_id] = mf.[file_id]
ORDER BY avg_io_latency_ms DESC OPTION (RECOMPILE);

INSTANCE Connection Counts By IP
13.00.1601.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, ec.client_net_address, es.[program_name], es.[host_name], es.login_name,
COUNT(ec.session_id) AS [connection count]
FROM sys.dm_exec_sessions AS es WITH (NOLOCK)
INNER JOIN sys.dm_exec_connections AS ec WITH (NOLOCK)
ON es.session_id = ec.session_id
GROUP BY ec.client_net_address, es.[program_name], es.[host_name], es.login_name
ORDER BY ec.client_net_address, es.[program_name] OPTION (RECOMPILE);

INSTANCE Average Task Counts
13.00.1601.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, AVG(current_tasks_count) AS [Avg Task Count],
AVG(work_queue_count) AS [Avg Work Queue Count],
AVG(runnable_tasks_count) AS [Avg Runnable Task Count],
AVG(pending_disk_io_count) AS [Avg Pending DiskIO Count]
FROM sys.dm_os_schedulers WITH (NOLOCK)
WHERE scheduler_id < 255 OPTION (RECOMPILE);

INSTANCE CPU Utilization History
13.00.1601.5
false
instance
DECLARE @ts_now bigint = (SELECT cpu_ticks/(cpu_ticks/ms_ticks) FROM sys.dm_os_sys_info WITH (NOLOCK));
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT TOP(256) @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, SQLProcessUtilization AS [SQL Server Process CPU Utilization],
               SystemIdle AS [System Idle Process],
               100 - SystemIdle - SQLProcessUtilization AS [Other Process CPU Utilization],
               DATEADD(ms, -1 * (@ts_now - [timestamp]), GETDATE()) AS [Event Time]
FROM (SELECT record.value('(./Record/@id)[1]', 'int') AS record_id,
			record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int')
			AS [SystemIdle],
			record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', 'int')
			AS [SQLProcessUtilization], [timestamp]
	  FROM (SELECT [timestamp], CONVERT(xml, record) AS [record]
			FROM sys.dm_os_ring_buffers WITH (NOLOCK)
			WHERE ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR'
			AND record LIKE N'%<SystemHealth>%') AS x) AS y
ORDER BY record_id DESC OPTION (RECOMPILE);

INSTANCE Top Worker Time Queries
13.00.1501.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT
SELECT TOP(50) @@SERVERNAME AS ServerName, Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, DB_NAME(t.[dbid]) AS [Database Name],
REPLACE(REPLACE(LEFT(t.[text], 255), CHAR(10),''), CHAR(13),'') AS [Short Query Text],
qs.total_worker_time AS [Total Worker Time], qs.min_worker_time AS [Min Worker Time],
qs.total_worker_time/qs.execution_count AS [Avg Worker Time],
qs.max_worker_time AS [Max Worker Time],
qs.min_elapsed_time AS [Min Elapsed Time],
qs.total_elapsed_time/qs.execution_count AS [Avg Elapsed Time],
qs.max_elapsed_time AS [Max Elapsed Time],
qs.min_logical_reads AS [Min Logical Reads],
qs.total_logical_reads/qs.execution_count AS [Avg Logical Reads],
qs.max_logical_reads AS [Max Logical Reads],
qs.execution_count AS [Execution Count],
CASE WHEN CONVERT(nvarchar(max), qp.query_plan) LIKE N'%<MissingIndexes>%' THEN 1 ELSE 0 END AS [Has Missing Index],
qs.creation_time AS [Creation Time]
--,t.[text] AS [Query Text], qp.query_plan AS [Query Plan] -- uncomment out these columns if not copying results to Excel
FROM sys.dm_exec_query_stats AS qs WITH (NOLOCK)
CROSS APPLY sys.dm_exec_sql_text(plan_handle) AS t
CROSS APPLY sys.dm_exec_query_plan(plan_handle) AS qp
ORDER BY qs.total_worker_time DESC OPTION (RECOMPILE);

INSTANCE CPU Usage By Database
13.00.1501.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT;
WITH DB_CPU_Stats
AS
(SELECT pa.DatabaseID, DB_Name(pa.DatabaseID) AS [Database Name], SUM(qs.total_worker_time/1000) AS [CPU_Time_Ms]
 FROM sys.dm_exec_query_stats AS qs WITH (NOLOCK)
 CROSS APPLY (SELECT CONVERT(int, value) AS [DatabaseID]
              FROM sys.dm_exec_plan_attributes(qs.plan_handle)
              WHERE attribute = N'dbid') AS pa
 GROUP BY DatabaseID)
SELECT Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName, ROW_NUMBER() OVER(ORDER BY [CPU_Time_Ms] DESC) AS [CPU Rank],
       [Database Name], [CPU_Time_Ms] AS [CPU Time (ms)],
       CAST([CPU_Time_Ms] * 1.0 / SUM([CPU_Time_Ms]) OVER() * 100.0 AS DECIMAL(5, 2)) AS [CPU Percent]
FROM DB_CPU_Stats
WHERE DatabaseID <> 32767 -- ResourceDB
ORDER BY [CPU Rank] OPTION (RECOMPILE);

INSTANCE IO Usage By Database
13.00.1501.5
false
instance
DECLARE @Domain NVARCHAR(100)
EXEC master.dbo.xp_regread 'HKEY_LOCAL_MACHINE', 'SYSTEM\CurrentControlSet\services\Tcpip\Parameters', N'Domain',@Domain OUTPUT;
WITH Aggregate_IO_Statistics
AS (SELECT DB_NAME(database_id) AS [Database Name],
    CAST(SUM(num_of_bytes_read + num_of_bytes_written) / 1048576 AS DECIMAL(12, 2)) AS [ioTotalMB],
    CAST(SUM(num_of_bytes_read ) / 1048576 AS DECIMAL(12, 2)) AS [ioReadMB],
    CAST(SUM(num_of_bytes_written) / 1048576 AS DECIMAL(12, 2)) AS [ioWriteMB]
    FROM sys.dm_io_virtual_file_stats(NULL, NULL) AS [DM_IO_STATS]
    GROUP BY database_id)
SELECT Cast(SERVERPROPERTY('MachineName') as nvarchar) + '.' + @Domain AS FQDN, @@SERVERNAME AS ServerName, ROW_NUMBER() OVER (ORDER BY ioTotalMB DESC) AS [I/O Rank],
        [Database Name], ioTotalMB AS [Total I/O (MB)],
        CAST(ioTotalMB / SUM(ioTotalMB) OVER () * 100.0 AS DECIMAL(5, 2)) AS [Total I/O Percent],
        ioReadMB AS [Read I/O (MB)],
		CAST(ioReadMB / SUM(ioReadMB) OVER () * 100.0 AS DECIMAL(5, 2)) AS [Read I/O Percent],
        ioWriteMB AS [Write I/O (MB)],
		CAST(ioWriteMB / SUM(ioWriteMB) OVER () * 100.0 AS DECIMAL(5, 2)) AS [Write I/O Percent]
FROM Aggregate_IO_Statistics
ORDER BY [I/O Rank] OPTION (RECOMPILE);

#